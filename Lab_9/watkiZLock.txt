using System;
using System.Windows.Forms;
using System.Threading;


class Watki
{   
    private static readonly object SyncObject = new object();
    static int liczbaIteracji = 10;
    static void Main()
    {
    Console.WriteLine("Podaj liczbę wątków:");
    string tekstZKonsoli = Console.ReadLine();
    int liczbaWatkow =0;
    try
	{
	liczbaWatkow = int.Parse(tekstZKonsoli);
	}
    catch (Exception ex)
	{
	Console.WriteLine("Błąd konwersji podanego tekstu do liczby: " + ex.Message);
	}
    Console.WriteLine("OK Stworzymy {0} wątków",liczbaWatkow);
    Thread[] tablicaWatkow = new Thread[liczbaWatkow];
    for (int licznik = 0;licznik<liczbaWatkow;licznik++)
	{
	tablicaWatkow[licznik] = new Thread(new ThreadStart(wyswietlajCos));
	tablicaWatkow[licznik].Name = "Wątek nr " + licznik.ToString();
	tablicaWatkow[licznik].Start();
	
        }
      
    foreach (Thread watek in tablicaWatkow) //czekamy na wszystkie wątki
	{
	watek.Join();
	}
    }

static void wyswietlajCos()
    {
    Console.WriteLine(Thread.CurrentThread.Name + " zaczyna pisać:");
    Random rand = new Random(Thread.CurrentThread.ManagedThreadId);//inicjuj random numerem wątka
    for (int ii = 0;ii<liczbaIteracji;ii++){
	lock(SyncObject){
	Console.WriteLine("Lock Start dla "+Thread.CurrentThread.Name);
	Console.Write("ala "); 
	Thread.Sleep(rand.Next(0,100));  //wstrzymaj działanie na czas od 0 do 0,1
	Console.Write("ma "); 
	Thread.Sleep(rand.Next(0,100)); //wstrzymaj działanie na czas od 0 do 0,1
	Console.WriteLine("kota " + ii);   
	Console.WriteLine("Lock Stop");
	}
	Thread.Sleep(rand.Next(0,2000)); //wstrzymaj działanie na czas od 0 do 2s
	}
    }
}
